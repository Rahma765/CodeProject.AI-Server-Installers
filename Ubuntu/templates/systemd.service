[Unit]
Description=__PRODUCT__ __VERSION__ application

[Service]
# Our app can NOT notify systemd of status changes
Type=simple

# systemd will run this executable to start the service
# if /usr/bin/dotnet doesn't work, use `which dotnet` to find correct dotnet executable path
# ExecStart=bash /usr/bin/__PRODUCT_DIRNAME__/__APPLICATION_START_SCRIPT__
ExecStart=bash /usr/bin/__PRODUCT_DIRNAME__/__APPLICATION_START_SCRIPT__

# to query logs using journalctl, set a logical name here
SyslogIdentifier=__PACKAGE_ID__

# Use your username to keep things simple.
# If you pick a different user, make sure dotnet and all permissions are set correctly to run the app
# To update permissions, use 'chown yourusername -R /srv/HelloWorld' to take ownership of the folder and files,
#       Use 'chmod +x /srv/HelloWorld/HelloWorld' to allow execution of the executable file
# User=yourusername

# ensure the service restarts after crashing
Restart=always

# amount of time to wait before restarting the service                        
RestartSec=5 

# This environment variable is necessary when dotnet isn't loaded for the specified user.
# To figure out this value, run 'env | grep DOTNET_ROOT' when dotnet has been loaded into your shell.
Environment=DOTNET_ROOT=/usr/lib64/dotnet

[Install]
WantedBy=multi-user.target

# More info: https://swimburger.net/blog/dotnet/how-to-run-a-dotnet-core-console-app-as-a-service-using-systemd-on-linux